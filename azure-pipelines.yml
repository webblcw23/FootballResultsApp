trigger: none

pool:
  vmImage: "ubuntu-latest"

variables:
- group: AzureConnections
- name: IMAGE_TAG_DEV
  value: "dev-001"
- name: IMAGE_TAG_STAGING
  value: "staging-001"
- name: IMAGE_TAG_PROD
  value: "prod-001"
- name: IMAGE_NAME
  value: "rangersapp"
- name: DOCKER_REGISTRY
  value: "$(ACR_NAME).azurecr.io"

stages:
- stage: ScrapeAndBuild
  displayName: "‚öôÔ∏è Scrape & Build Docker Image"
  jobs:
    - job: BuildPush
      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: "3.10"
            addToPath: true

        - script: |
            python -m venv venv
            source venv/bin/activate
            pip install pandas
            python Data/scrape_scores.py
          displayName: "Scrape Latest Match Results"

        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: "Data/rangers-results.json"
            artifactName: "rangers-results"
          displayName: "Publish Results JSON"

        - task: DownloadBuildArtifacts@0
          inputs:
            artifactName: "rangers-results"
            downloadPath: "Data"

        - script: mv Data/rangers-results/rangers-results.json Data/rangers-results.json
          displayName: "Move JSON to Expected Path"

        - task: Docker@2
          displayName: "Build and Push Docker Image"
          inputs:
            containerRegistry: "rangers-docker-acr"
            repository: "$(IMAGE_NAME)"
            command: "buildAndPush"
            Dockerfile: "Dockerfile"
            buildContext: "."
            tags: |
              $(IMAGE_TAG_DEV)
              $(IMAGE_TAG_STAGING)
              $(IMAGE_TAG_PROD)

- stage: DeployDev
  displayName: "üöÄ Deploy to Dev Web App"
  dependsOn: ScrapeAndBuild
  jobs:
    - job: RestartDev
      steps:
        - task: AzureCLI@2
          displayName: "Restart Dev Web App"
          inputs:
            azureSubscription: "rangers-arm-service-connection"
            scriptType: "bash"
            scriptLocation: "inlineScript"
            inlineScript: |
              az webapp restart --name rangers-webapp-dev --resource-group rg-rangers-dev

- stage: DeployStaging
  displayName: "üö¶ Deploy to Staging Web App"
  dependsOn: DeployDev
  condition: succeeded()
  jobs:
    - job: RestartStaging
      steps:
        - task: AzureCLI@2
          displayName: "Restart Staging Web App"
          inputs:
            azureSubscription: "rangers-arm-service-connection"
            scriptType: "bash"
            scriptLocation: "inlineScript"
            inlineScript: |
              az webapp restart --name rangers-webapp-staging --resource-group rg-rangers-staging

- stage: DeployProduction
  displayName: "‚úÖ Deploy to Production Web App"
  dependsOn: DeployStaging
  condition: succeeded()
  jobs:
    - deployment: RestartProdGate
      environment: Production
      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: self
              - task: AzureCLI@2
                displayName: "Restart Prod Web App"
                inputs:
                  azureSubscription: "rangers-arm-service-connection"
                  scriptType: "bash"
                  scriptLocation: "inlineScript"
                  inlineScript: |
                    az webapp restart --name rangers-webapp-prod --resource-group rg-rangers-prod
